// A "vampire" number is an odd-digit number where it is the multiple of 2 half-sized numbers. E.g. abcd = ab * cd.
// The order of numbers does not matter, but it cannot end with 2 consecutive 0's.
// This program uses brute force finds all 4-digit vampire numbers.

public class Main {
    public static void main(String[] args) {
        for (int i = 1000; i < 10000; i++){

            // cannot end with 2 0's
            if (i % 100 == 0){
                continue;
            } else {
                // getting all digits
                int a = i / 1000;
                int b = (i - a * 1000) / 100;
                int c = (i - a * 1000 - b * 100) / 10;
                int d = (i - a * 1000 - b * 100 - c * 10);

                // testing all combinations
                if (i == (a*10+b)*(c*10+d) || i == (a*10+b)*(d*10+c) || i == (a*10+c)*(b*10+d) || i == (a*10+c)*(d*10+b) ||
                        i == (a*10+d)*(b*10+c) || i == (a*10+d)*(c*10+b) || i == (b*10+a)*(c*10+d) || i == (b*10+a)*(d*10+c) ||
                        i == (b*10+c)*(d*10+a) || i == (b*10+d)*(c*10+a) || i == (c*10+a)*(d*10+b) || i == (c*10+b)*(d*10+a)){
                    System.out.println(i);
                }
            }
        }

    }
}
